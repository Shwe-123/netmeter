/***************************************************************************
 *   Copyright (C) 2007 by Roberto Barreda <rbarreda@ac.upc.edu>           *
 *   Copyright (C) 2005 by Ernest Nieto <ernest.nieto@gmail.com>           *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/
#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

#include "nmgimagemanager.h"
#include "nmgpreferencesmanager.h"

#include <QFile>
#include <QString>
#include <QPixmap>

#include <stdio.h>
#include <iostream>
using namespace std;

static const unsigned char imageNotExistsFile [] =
    {
        0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
        0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
        0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
        0x5a, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xa5, 0x93, 0xbd, 0x4a, 0x03,
        0x41, 0x14, 0x85, 0xbf, 0xbb, 0xb3, 0xf9, 0x21, 0x06, 0x8b, 0x14, 0xb6,
        0x12, 0x04, 0x2b, 0xc1, 0x42, 0x10, 0x04, 0x2b, 0x1b, 0x0b, 0x83, 0x85,
        0xbd, 0x65, 0x1a, 0x5f, 0xc1, 0xd6, 0x3c, 0x88, 0xa0, 0xa5, 0x01, 0x7d,
        0x03, 0x1b, 0xbb, 0x58, 0x5b, 0xd9, 0xd8, 0x59, 0x88, 0x3f, 0x89, 0x59,
        0x36, 0x93, 0x5c, 0x8b, 0x99, 0xcd, 0xee, 0x9a, 0x89, 0x8d, 0x17, 0x86,
        0x59, 0x98, 0x73, 0xee, 0x3d, 0x3b, 0xe7, 0x8c, 0xa8, 0x2a, 0xff, 0xa9,
        0x38, 0xfb, 0xe8, 0x89, 0x00, 0x28, 0xc0, 0xb9, 0xaa, 0x84, 0xc0, 0x21,
        0x4c, 0x54, 0x3c, 0xe8, 0x6e, 0xc1, 0xd9, 0x36, 0xf4, 0x44, 0x16, 0x64,
        0x65, 0x98, 0xa3, 0x0d, 0x38, 0x58, 0xcf, 0x31, 0x72, 0xe1, 0xce, 0xb5,
        0xd3, 0x86, 0x8a, 0x81, 0x4a, 0xe4, 0xd6, 0xf5, 0x53, 0x3e, 0xa5, 0x48,
        0x1e, 0x5b, 0x48, 0x26, 0x90, 0x58, 0x78, 0x7c, 0x85, 0x78, 0xe0, 0x27,
        0xec, 0x25, 0x8e, 0x18, 0xfb, 0x06, 0x9d, 0x76, 0x59, 0xc9, 0x6f, 0xf2,
        0xd8, 0xc2, 0x00, 0x10, 0x55, 0xe5, 0xc4, 0x4f, 0x38, 0x6d, 0x79, 0x05,
        0x5e, 0x89, 0x11, 0xb7, 0x37, 0x6a, 0x8b, 0xe4, 0xab, 0x37, 0xe8, 0xab,
        0x8a, 0x64, 0x2e, 0x64, 0x4d, 0x8e, 0x9b, 0xd0, 0x88, 0xa1, 0x6e, 0xa0,
        0x59, 0x85, 0xd5, 0x3a, 0x4c, 0x66, 0x61, 0xf2, 0xfc, 0x12, 0x01, 0xfa,
        0xae, 0x91, 0xdc, 0x0d, 0x41, 0x80, 0xaa, 0x81, 0x9a, 0xf9, 0x9b, 0x5c,
        0xb2, 0x11, 0x60, 0xc7, 0xef, 0x2b, 0x15, 0x37, 0x3d, 0x8e, 0xe0, 0xbb,
        0x40, 0x4e, 0xa7, 0x39, 0x26, 0xab, 0x88, 0x40, 0x35, 0x62, 0x30, 0x06,
        0xbe, 0x6d, 0x4e, 0x4e, 0x2c, 0x44, 0x81, 0x74, 0xcc, 0x1b, 0x64, 0x56,
        0x1d, 0xb6, 0xa1, 0x56, 0x2d, 0xcb, 0x4e, 0x2c, 0x58, 0x60, 0x06, 0x6c,
        0xb6, 0xca, 0xee, 0x88, 0xaa, 0x06, 0x7d, 0x4e, 0xa7, 0x30, 0x9a, 0xc0,
        0x57, 0x0a, 0x23, 0x0b, 0x26, 0x2a, 0xdb, 0xfc, 0xfc, 0xee, 0x72, 0x32,
        0x0f, 0x52, 0xc8, 0xe7, 0xdb, 0x0f, 0x18, 0x4e, 0x9d, 0xcc, 0x7d, 0x7f,
        0x27, 0x71, 0xa1, 0xd1, 0xcb, 0x27, 0x44, 0x03, 0x5c, 0x20, 0x42, 0x3e,
        0x5f, 0x5a, 0x95, 0x1b, 0x55, 0x99, 0x82, 0xdc, 0xa7, 0xf9, 0xef, 0x8c,
        0x97, 0x05, 0xa9, 0xbb, 0x16, 0xb6, 0xaa, 0x98, 0x93, 0x5d, 0x3f, 0xfd,
        0xc1, 0x2e, 0x09, 0x92, 0xcf, 0x44, 0xf0, 0x35, 0x86, 0x30, 0x3f, 0x6b,
        0x53, 0xdc, 0x01, 0xe2, 0xe0, 0x05, 0x3b, 0x00, 0x00, 0x00, 0x00, 0x49,
        0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
    };

/**
 * Contructor of the class: not used (class which only provides static functions)
 * @return
 */
NMGImageManager::NMGImageManager()
{}

/**
 * Destroyer of the class
 * @return
 */
NMGImageManager::~NMGImageManager()
{}

/**
 * Returns the QPixmap at the indicated filename
 * @param fileName File name of the pixmap
 * @return a QPixmap
 */
QPixmap * NMGImageManager::loadPixmap ( const QString & fileName )
{
	QString path = getImagesPath() + "/" + fileName;
	if ( QFile::exists ( path ) ) return new QPixmap ( path );

	QPixmap * noImg = new QPixmap();
	if ( noImg->loadFromData ( imageNotExistsFile, sizeof ( imageNotExistsFile ), "PNG" ) )
		return noImg;
	else {
		cerr << "[WARNING] Impossible to load NotExistsFile Pixmap" << endl;
		return new QPixmap();
	}
}

/**
 * Returns the path directory where are all the images
 * @return
 */
QString NMGImageManager::getImagesPath()
{
	QString path = NMGPreferencesManager::self()->getValue ( NMG_IMAGES_PATH );
	if ( path.isEmpty() )
	{
		path = QString ( ICON_DIR );
		//NMGPreferencesManager::self()->selectImageDirectoryClicked();
		//path = NMGPreferencesManager::self()->getValue(NMG_IMAGES_PATH);
	}
	return path;
}

